# Model 구성하기

## DataBase 이해하기
### DataBase
- 엑셀의 스프레드시트와 같은 역할을 하는 데이터 관리 도구

### Model과 DataBase의 관계
- `02_django_사용하기`에서 URLconf를 메뉴판, View를 해당 메뉴를 처리하는 직원으로 가정했었다.
- Model은 메뉴를 만들기 위한 재료들을 저장하는 창고라고 가정한다.
  - 지속적으로 업데이트되는 메뉴 목록을 위해서는, 메뉴 정보를 저장할 수 있는 엑셀 시트가 필요하기 때문
- 파이썬의 함수로 View를 정의하듯, 파이썬의 클래스로 Model을 정의할 수 있다.
- 각각의 Model 클래스는 엑셀의 시트에 해당하고, 데이터베이스의 테이블에 해당한다
  - 엑셀의 Sheet ~ 장고의 Model ~ 데이터베이스의 Table

## App 만들기
- 이제 메뉴의 정보를 저장할 app을 추가해야 한다.
  - 장고에서는 큰 프로젝트를 app이라는 단위로 나눈다.
- 과정
  1. 새로운 app을 생성한다.
     1. `manage.py` 파일이 있는 곳에서 실행한다.
     2. `python manage.py startapp <app_name>`
  2. 명령을 실행하면 프로젝트에 `<app_name>`의 디렉토리가 추가 생성된다.
     1. `<app_name>` 안에는 `migrations` 디렉터리와 `__init__.py`, `admin.py`, `apps.py`, `models.py`, `tests.py`, `views.py` 파일이 생성된다.
     2. 파이썬 구조에서는 디렉터리는 곧 **패키지(package)**, 파일은 곧 **모듈(module)**이라고 부른다.
  3. app을 새로 생성하였으니, 장고에게 app 생성 사실을 알린다.
     1. project의 master 앱 안 `settings.py` 파일의 `INSTALLED_APPS` 리스트에 APP 이름을 추가한다.
     2. 생존신고와 같은 역할을 한다.
  4. 새롭게 생성된 app의 `models.py`에 Model 클래스를 작성한다.
  5. 